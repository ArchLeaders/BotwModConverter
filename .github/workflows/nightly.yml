name: Nightly

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Linux
            os: ubuntu-latest
            ext: ""
            runtime: linux-x64
            build: linux
            msbuild_flags: -p:DefineConstants=LINUX
            vars: CXX="g++"
            setup: |
              sudo apt-get update
              sudo apt-get install ninja-build cmake
              ninja --version
              cmake --version
              gcc --version
          - name: Windows
            os: windows-latest
            ext: .exe
            runtime: win-x64
            setup: |
              choco install ninja cmake
              ninja --version
              cmake --version

    env:
      proj: "BotwModConverter.Console"

    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive

      - name: Install Dependencies
        run: ${{ matrix.config.setup }}

      - name: Configure (CMake)
        shell: bash
        run: |
          mkdir ./lib/Cead/native/build
          ${{ matrix.config.vars }} \
          cmake --no-warn-unused-cli \
            -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE \
            -DCMAKE_BUILD_TYPE:STRING=Release \
            -S ./lib/Cead/native \
            -B ./lib/Cead/native/build/${{ matrix.config.build }} \
            -G "Ninja"

      - name: Build (CMake)
        shell: bash
        run: |
          cmake --build ./lib/Cead/native/build/${{ matrix.config.build }} --config Release --target all -j 4

      - name: Install DotNET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Build Cead
        shell: bash
        run: |
          dotnet build lib/Cead/src/Cead.csproj \
          -r ${{ matrix.config.runtime }} \
          -c Release
          --sc false ${{ matrix.config.msbuild_flags }}

      - name: Build Botw Mod Converter
        shell: bash
        run: |
          dotnet build src/${{ env.proj }}/${{ env.proj }}.csproj \
          -r ${{ matrix.config.runtime }} \
          -c Release \
          --sc false

      - name: Publish Botw Mod Converter
        shell: bash
        run: |
          dotnet publish src/${{ env.proj }}/${{ env.proj }}.csproj \
          -r ${{ matrix.config.runtime }} \
          -c Release \
          --sc false \
          --no-build \
          -o ${{ matrix.config.name }} \
          -p:PublishSingleFile=true \
          -p:IncludeNativeLibrariesForSelfExtract=true

      - uses: actions/upload-artifact@v3
        name: Upload artifacts
        with:
          name: ${{ env.proj }}${{ matrix.config.ext }}
          path: ${{ matrix.config.name }}/${{ env.proj }}${{ matrix.config.ext }}
